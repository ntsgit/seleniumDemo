{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2022-01-14T14:00:24.532Z",
    "end": "2022-01-14T14:00:34.576Z",
    "duration": 10044,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "20dc7e91-db9d-4bcc-ae23-1ec7a570b8a0",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7e48f1e7-bbb4-4e79-965a-2f2a49de9a43",
          "title": "Login to application",
          "fullFile": "C:\\Users\\nilic\\Desktop\\gitRepo\\seleniumDemo\\test\\sauceDemoTest.js",
          "file": "\\test\\sauceDemoTest.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Login to application\"",
              "fullTitle": "Login to application \"before each\" hook in \"Login to application\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "6bae0fd9-33c1-47c7-ac8a-1d2e7678ffd1",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login to application\"",
              "fullTitle": "Login to application \"after each\" hook in \"Login to application\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "3d4f2c64-7c3d-41c8-b248-3030e23a9a71",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "login to application for valid user",
              "fullTitle": "Login to application login to application for valid user",
              "timedOut": null,
              "duration": 4447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const driver = await new Builder().forBrowser(\"firefox\").build();\ntry {\n    //navigate to our application\n    await driver.get(webAddress);\n    user = 'standard_user';//, \"problem_user\", \"performance_glitch_user\"\n    password = 'secret_sauce';\n    //enter user name\n    await driver.findElement(By.id(\"user-name\")).sendKeys(user);\n    //enter password\n    await driver.findElement(By.id(\"password\")).sendKeys(password);\n    //click login button\n    await driver.findElement(By.id(\"login-button\")).sendKeys(Key.RETURN);\n    //verify login via assertions\n    const currentAddress = await driver.getCurrentUrl();\n    currentAddress.should.not.equal(`${webAddress}`);\n    const currentAddressLength = currentAddress.length;\n    expect(currentAddressLength).to.not.be.equal(webAddress.length);\n    // valid user must not have login button\n    const loginButton = await driver.findElement(By.id(\"login-button\"))\n} catch (error) {\n    console.error(error);\n} finally {\n    await driver.quit();\n}",
              "err": {},
              "uuid": "4c8b6b49-2cf8-4e0e-82ee-99f912bc73ce",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login to application for invalid user",
              "fullTitle": "Login to application login to application for invalid user",
              "timedOut": null,
              "duration": 5188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const driver = await new Builder().forBrowser(\"firefox\").build();\n//navigate to our application\nawait driver.get(webAddress);\nuser = 'locked_out_user';//, \"problem_user\", \"performance_glitch_user\"\npassword = 'secret_sauce';\n//enter user name\nawait driver.findElement(By.id(\"user-name\")).sendKeys(user);\n//enter password\nawait driver.findElement(By.id(\"password\")).sendKeys(password);\n//click login button\nawait driver.findElement(By.id(\"login-button\")).sendKeys(Key.RETURN);\n//verify login via assertions\nconst currentAddress = await driver.getCurrentUrl();\ncurrentAddress.should.equal(`${webAddress}`);\nconst currentAddressLength = currentAddress.length;\nexpect(currentAddressLength).to.be.equal(webAddress.length);\n// invalid user must have login button\nawait driver.quit();",
              "err": {},
              "uuid": "222587bc-8809-4851-9b16-7315d45fdf62",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c8b6b49-2cf8-4e0e-82ee-99f912bc73ce",
            "222587bc-8809-4851-9b16-7315d45fdf62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9635,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/nilic/Desktop/gitRepo/seleniumDemo/test-report",
        "reportFilename": "testResults"
      },
      "version": "6.0.1"
    }
  }
}